# 确定安装成功后我们创建一个 minimal.py 文件，并写入下面的代码：

from flask import Flask

app = Flask(__name__)


# 首先，导入类 flask中的url.Flask，实例化创建一个 Flask 应用，第一个参数是 Flask 应用的名称。__name__ 是一个标识 Python 模块的名字的变量：
#
# 如果当前模块是主模块，那么此模块名字就是 __main__；
# 如果当前模块是被 import 的，则此模块名字为文件名。

@app.route('/')
def hello_world():
    return '<b>Hello World</b>'


# 然后，定义函数 hello_world，它返回一段 html 文本。app.route(’/’) 返回一个装饰器，装饰器来为函数 hello_world 绑定对应的 URL，当用户在浏览器访问这个 URL
# 的时候，就会触发这个函数，获取返回值。

if __name__ == '__main__':

    # app.run()
    # 这是默认的

    # 上面说到要在浏览器中输入 localhost:5000 才能看到运行效果。其中 localhost 代表本地 IP 地址，你也可以把 localhost 改成 127.0.0.1，效果和 localhost 是一样的。那么
    # 5000 代表什么呢？ 其实 5000
    # 是一个端口号，你可以把端口号理解为是门牌号。我们的电脑会为每一个应用程序划分运行区间，每一个运行区间的标识就是端口号，我们可以通过端口号来访问对应的应用程序，这和你在酒店根据门牌号找到房间是一个道理。
    # 默认情况下，Flask 应用程序监听地址 127.0.0.1 和端口 5000。如果你不想让 Flask 程序运行在 5000 端口，也可以通过参数设置可以修改默认的监听地址和端口，比如我们想让 Flask
    # 程序运行在一个比较吉利的端口 8888 上面，可以这样修改代码：
    app.run(host='0.0.0.0', port=1308)
    # 设定 app.run 的函数参数 host 为 ‘0.0.0.0’，表示监听每一个可用的网络接口；设定 app.run 的函数参数 port 为 8888，表示监听端口 8888。

# 如果当前模块是主模块，则变量 __name__ 为 '__main__，此时调用 run() 方法启动 Flask 应用。
